/****************************************************
 *
 * ****     ***     ****    *   *    *****    *****
 * *  *    *   *   *        ****     ***        *
 * *   *    ***     ****    *   *    *****      *
 *
 * query_student.h
 * 2024-07-24 02:16:14
 * Generated by rocket framework rocket_generator.py
 * File will not generate while exist
 * Allow editing
****************************************************/

#ifndef STUDENT_SERVER_INTERFACE_QUERY_STUDENT_H
#define STUDENT_SERVER_INTERFACE_QUERY_STUDENT_H 

#include <rocket/net/rpc/rpc_closure.h>
#include "student_server/pb/student_server.pb.h"


namespace student_server {

/*
 * Rpc Interface Class
 * Alloc one object every time RPC call begin, and destroy this object while RPC call end
*/

class QueryStudentInterface : public Interface {
 public:

  QueryStudentInterface(const ::queryStudentRequest* request, ::queryStudentResponse* response, 
    rocket::RpcClosure* done, rocket::RpcController* controller);

  ~QueryStudentInterface();

 public:
  // core business deal method
  virtual void run() override;

  // set error code and error into to response message
  virtual void setError(int code, const std::string& err_info) override;

 private:
  const ::queryStudentRequest* m_request {NULL};       // request object fron client

  ::queryStudentResponse* m_response {NULL};           // response object that reply to client

};


}


#endif